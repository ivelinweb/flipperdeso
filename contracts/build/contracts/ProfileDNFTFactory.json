{
  "contractName": "ProfileDNFTFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "profile",
          "type": "address"
        }
      ],
      "name": "ProfileCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_updateInterval",
          "type": "uint256"
        }
      ],
      "name": "createProfileDNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserProfile",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"profile\",\"type\":\"address\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_updateInterval\",\"type\":\"uint256\"}],\"name\":\"createProfileDNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserProfile\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/User/ProfileDNFTFactory.sol\":\"ProfileDNFTFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/User/ProfileDNFTFactory.sol\":{\"keccak256\":\"0xfd806de39154f6b3c78214b0fed5ca051c65332dbfcabcb979b973a08b007807\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7996d7b91959c103bbcdabdf0cc56cb3843257a0ade8353d99bf7b898cf286c1\",\"dweb:/ipfs/QmUDZnWuC3FVmSAsRWZxHJjHXzo3f3TcRoduAj8xYd38dk\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/AutomationBase.sol\":{\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3613ee132e1f05b3e23955db6a849966487fab8ea33e9bb70d6f038fc48c0608\",\"dweb:/ipfs/QmRgdumWFMX35vSrZpCCvXDTvRBVXRkexnxoZqqfnGisnZ\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/AutomationCompatible.sol\":{\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a134c3bea2e8a6ed29f109e422a9bafb3f43523235188618cf016ed86fafc8\",\"dweb:/ipfs/QmPUGoVde38kbteT358jsskzh5spoJtUoaNZ8UJWVqP3im\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"project:/node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"project:/node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"project:/node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"project:/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"project:/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"project:/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3775:31",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:31"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:31",
                "type": ""
              }
            ],
            "src": "7:75:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:31"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:31"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:31",
                "type": ""
              }
            ],
            "src": "334:77:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:31"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:31"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:31",
                "type": ""
              }
            ],
            "src": "417:122:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:31"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:31",
                "type": ""
              }
            ],
            "src": "545:139:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:31"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:31",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:31"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:31"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:31",
                "type": ""
              }
            ],
            "src": "690:329:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:31",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:31",
                "type": ""
              }
            ],
            "src": "1025:126:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:31",
                "type": ""
              }
            ],
            "src": "1157:96:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1302:79:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1359:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1368:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1371:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1361:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1361:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1361:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1325:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1350:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1332:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1332:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1322:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1322:35:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1315:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:43:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1312:63:31"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1295:5:31",
                "type": ""
              }
            ],
            "src": "1259:122:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1439:87:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1449:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1471:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1458:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:20:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1449:5:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1514:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1487:26:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1487:33:31"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1417:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1425:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1433:5:31",
                "type": ""
              }
            ],
            "src": "1387:139:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1598:263:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1644:83:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1646:77:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1646:79:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1646:79:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1619:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1628:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1615:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1615:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1611:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1608:119:31"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1737:117:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1752:15:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1766:1:31",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1756:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1781:63:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1816:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1827:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1812:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1812:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1836:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1791:20:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1791:53:31"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1781:6:31"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1568:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1579:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1591:6:31",
                "type": ""
              }
            ],
            "src": "1532:329:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1932:53:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1949:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1972:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1954:17:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:24:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1942:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1942:37:31"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1920:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1927:3:31",
                "type": ""
              }
            ],
            "src": "1867:118:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2089:124:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2099:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2111:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2122:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2107:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2099:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2179:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2192:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2203:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2188:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2188:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2135:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2135:71:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2061:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2073:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2084:4:31",
                "type": ""
              }
            ],
            "src": "1991:222:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2315:73:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2332:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2337:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:19:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2325:19:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2353:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2372:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2377:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2368:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2353:11:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2287:3:31",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2292:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2303:11:31",
                "type": ""
              }
            ],
            "src": "2219:169:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2500:123:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2522:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2530:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2518:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2518:14:31"
                      },
                      {
                        "hexValue": "50726f66696c65444e4654466163746f72793a2050726f66696c6520616c7265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2534:34:31",
                        "type": "",
                        "value": "ProfileDNFTFactory: Profile alre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:58:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:58:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2590:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2598:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2586:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2586:15:31"
                      },
                      {
                        "hexValue": "61647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2603:12:31",
                        "type": "",
                        "value": "ady exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2579:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2579:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2579:37:31"
                }
              ]
            },
            "name": "store_literal_in_memory_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2492:6:31",
                "type": ""
              }
            ],
            "src": "2394:229:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2775:220:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2785:74:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2851:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2856:2:31",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2792:58:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2792:67:31"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2785:3:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2957:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6",
                      "nodeType": "YulIdentifier",
                      "src": "2868:88:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2868:93:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2868:93:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2970:19:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2981:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2986:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2977:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2977:12:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2970:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2763:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2771:3:31",
                "type": ""
              }
            ],
            "src": "2629:366:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3172:248:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3182:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3194:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3205:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3190:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3182:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3229:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3240:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3225:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3225:17:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3248:4:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3254:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3244:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:20:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3218:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3218:47:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3218:47:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3274:139:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3408:4:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3282:124:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3282:131:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3274:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3152:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3167:4:31",
                "type": ""
              }
            ],
            "src": "3001:419:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3491:53:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3508:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3531:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3513:17:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3513:24:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3501:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3501:37:31"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3479:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3486:3:31",
                "type": ""
              }
            ],
            "src": "3426:118:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3648:124:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3658:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3670:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3681:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3666:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3666:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3658:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3738:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3751:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3762:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3747:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3747:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3694:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3694:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3694:71:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3620:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3632:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3643:4:31",
                "type": ""
              }
            ],
            "src": "3550:222:31"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ProfileDNFTFactory: Profile alre\")\n\n        mstore(add(memPtr, 32), \"ady exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "312:793:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "312:793:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:421;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;992:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;565:421;691:1;654:39;;:13;:25;668:10;654:25;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;633:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;772:19;810:15;794:32;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;772:54;;836:7;:16;;;853:10;836:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:7;875:13;:25;889:10;875:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;970:7;935:44;;950:10;935:44;;;;;;;;;;;;623:363;565:421;:::o;992:111::-;1051:7;1077:13;:19;1091:4;1077:19;;;;;;;;;;;;;;;;;;;;;;;;;1070:26;;992:111;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:31:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:169::-;2303:11;2337:6;2332:3;2325:19;2377:4;2372:3;2368:14;2353:29;;2219:169;;;;:::o;2394:229::-;2534:34;2530:1;2522:6;2518:14;2511:58;2603:12;2598:2;2590:6;2586:15;2579:37;2394:229;:::o;2629:366::-;2771:3;2792:67;2856:2;2851:3;2792:67;:::i;:::-;2785:74;;2868:93;2957:3;2868:93;:::i;:::-;2986:2;2981:3;2977:12;2970:19;;2629:366;;;:::o;3001:419::-;3167:4;3205:2;3194:9;3190:18;3182:26;;3254:9;3248:4;3244:20;3240:1;3229:9;3225:17;3218:47;3282:131;3408:4;3282:131;:::i;:::-;3274:139;;3001:419;;;:::o;3426:118::-;3513:24;3531:5;3513:24;:::i;:::-;3508:3;3501:37;3426:118;;:::o;3550:222::-;3643:4;3681:2;3670:9;3666:18;3658:26;;3694:71;3762:1;3751:9;3747:17;3738:6;3694:71;:::i;:::-;3550:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../../node_modules/@chainlink/contracts/src/v0.8/AutomationCompatible.sol\";\nimport \"../../node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"../../node_modules/@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract ProfileDNFTFactory {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private profileIdCounter;\n    mapping(address => address) private userToProfile;\n\n    event ProfileCreated(address indexed user, address indexed profile);\n\n    function createProfileDNFT(uint _updateInterval) external {\n        require(\n            userToProfile[msg.sender] == address(0),\n            \"ProfileDNFTFactory: Profile already exists\"\n        );\n\n        ProfileDNFT profile = new ProfileDNFT(_updateInterval);\n        profile.safeMint(msg.sender);\n\n        userToProfile[msg.sender] = address(profile);\n\n        emit ProfileCreated(msg.sender, address(profile));\n    }\n\n    function getUserProfile(address user) public view returns (address) {\n        return userToProfile[user];\n    }\n}\n\ncontract ProfileDNFT is\n    ERC721,\n    ERC721URIStorage,\n    AutomationCompatibleInterface\n{\n    using Counters for Counters.Counter;\n\n    Counters.Counter private tokenIdCounter;\n    string[] private ipfsUri;\n    uint private immutable interval;\n    uint private lastUpdateTime;\n\n    constructor(uint _updateInterval) ERC721(\"UserImages\", \"Photo\") {\n        interval = _updateInterval;\n        lastUpdateTime = block.timestamp;\n        _safeMint(msg.sender, tokenIdCounter.current());\n        _setTokenURI(tokenIdCounter.current(), \"\");\n        tokenIdCounter.increment();\n    }\n\n    function checkUpkeep(\n        bytes calldata\n    )\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        if (\n            block.timestamp - lastUpdateTime > interval &&\n            imageStage() < ipfsUri.length\n        ) {\n            upkeepNeeded = true;\n        }\n    }\n\n    function performUpkeep(bytes calldata) external override {\n        if (\n            block.timestamp - lastUpdateTime > interval &&\n            imageStage() < ipfsUri.length\n        ) {\n            _setTokenURI(tokenIdCounter.current() - 1, ipfsUri[imageStage()]);\n            lastUpdateTime = block.timestamp;\n        }\n    }\n\n    function safeMint(address to) public {\n        _safeMint(to, tokenIdCounter.current());\n        _setTokenURI(tokenIdCounter.current(), ipfsUri[0]);\n        tokenIdCounter.increment();\n    }\n\n    function updateImage(\n        string memory _newImageUri\n    ) public returns (string[] memory) {\n        ipfsUri.push(_newImageUri);\n        return ipfsUri;\n    }\n\n    function imageStage() public view returns (uint) {\n        return ipfsUri.length;\n    }\n\n    function getIpfsUri() public view returns (string[] memory) {\n        return ipfsUri;\n    }\n\n    function tokenURI(\n        uint256 tokenId\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    function _burn(\n        uint256 tokenId\n    ) internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view override(ERC721, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n",
  "sourcePath": "/home/evm/sei/flipper/contracts/contracts/User/ProfileDNFTFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/User/ProfileDNFTFactory.sol",
    "exportedSymbols": {
      "Address": [
        3375
      ],
      "AutomationBase": [
        1556
      ],
      "AutomationCompatible": [
        1565
      ],
      "AutomationCompatibleInterface": [
        1630
      ],
      "Context": [
        3397
      ],
      "Counters": [
        3471
      ],
      "ERC165": [
        3724
      ],
      "ERC721": [
        2698
      ],
      "ERC721URIStorage": [
        3018
      ],
      "IERC165": [
        3736
      ],
      "IERC4906": [
        1768
      ],
      "IERC721": [
        2814
      ],
      "IERC721Metadata": [
        3045
      ],
      "IERC721Receiver": [
        2832
      ],
      "Math": [
        4602
      ],
      "ProfileDNFT": [
        1137
      ],
      "ProfileDNFTFactory": [
        901
      ],
      "SignedMath": [
        5019
      ],
      "Strings": [
        3700
      ]
    },
    "id": 1138,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 814,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/AutomationCompatible.sol",
        "file": "../../node_modules/@chainlink/contracts/src/v0.8/AutomationCompatible.sol",
        "id": 815,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1138,
        "sourceUnit": 1566,
        "src": "57:83:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "../../node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 816,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1138,
        "sourceUnit": 3019,
        "src": "141:97:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "../../node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "id": 817,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1138,
        "sourceUnit": 3472,
        "src": "239:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ProfileDNFTFactory",
        "contractDependencies": [
          1137
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 901,
        "linearizedBaseContracts": [
          901
        ],
        "name": "ProfileDNFTFactory",
        "nameLocation": "321:18:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 821,
            "libraryName": {
              "id": 818,
              "name": "Counters",
              "nameLocations": [
                "352:8:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3471,
              "src": "352:8:4"
            },
            "nodeType": "UsingForDirective",
            "src": "346:36:4",
            "typeName": {
              "id": 820,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 819,
                "name": "Counters.Counter",
                "nameLocations": [
                  "365:8:4",
                  "374:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3403,
                "src": "365:16:4"
              },
              "referencedDeclaration": 3403,
              "src": "365:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3403_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 824,
            "mutability": "mutable",
            "name": "profileIdCounter",
            "nameLocation": "413:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 901,
            "src": "388:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3403_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 823,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 822,
                "name": "Counters.Counter",
                "nameLocations": [
                  "388:8:4",
                  "397:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3403,
                "src": "388:16:4"
              },
              "referencedDeclaration": 3403,
              "src": "388:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3403_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 828,
            "mutability": "mutable",
            "name": "userToProfile",
            "nameLocation": "471:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 901,
            "src": "435:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 827,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 825,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "443:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "435:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 826,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "454:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "0e3805ab5ed81d70cc14ca89a9d933b5cb074fe2cd9a0c48c3c4a6f404304bbc",
            "id": 834,
            "name": "ProfileCreated",
            "nameLocation": "497:14:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "528:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "512:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "profile",
                  "nameLocation": "550:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "534:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "511:47:4"
            },
            "src": "491:68:4"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "623:363:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 840,
                            "name": "userToProfile",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 828,
                            "src": "654:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 843,
                          "indexExpression": {
                            "expression": {
                              "id": 841,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "668:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "672:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "668:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "654:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "691:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "683:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 844,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "683:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "654:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f66696c65444e4654466163746f72793a2050726f66696c6520616c726561647920657869737473",
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6",
                          "typeString": "literal_string \"ProfileDNFTFactory: Profile already exists\""
                        },
                        "value": "ProfileDNFTFactory: Profile already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9b935e90f5fad8ecb40e2c0c393b280cbd5fa8fcfbe9eadac4444f7c312d9d6",
                          "typeString": "literal_string \"ProfileDNFTFactory: Profile already exists\""
                        }
                      ],
                      "id": 839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "633:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:128:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "633:128:4"
                },
                {
                  "assignments": [
                    854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 854,
                      "mutability": "mutable",
                      "name": "profile",
                      "nameLocation": "784:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "772:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                        "typeString": "contract ProfileDNFT"
                      },
                      "typeName": {
                        "id": 853,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 852,
                          "name": "ProfileDNFT",
                          "nameLocations": [
                            "772:11:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1137,
                          "src": "772:11:4"
                        },
                        "referencedDeclaration": 1137,
                        "src": "772:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                          "typeString": "contract ProfileDNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 860,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 858,
                        "name": "_updateInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "810:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "794:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_ProfileDNFT_$1137_$",
                        "typeString": "function (uint256) returns (contract ProfileDNFT)"
                      },
                      "typeName": {
                        "id": 856,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 855,
                          "name": "ProfileDNFT",
                          "nameLocations": [
                            "798:11:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1137,
                          "src": "798:11:4"
                        },
                        "referencedDeclaration": 1137,
                        "src": "798:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                          "typeString": "contract ProfileDNFT"
                        }
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                      "typeString": "contract ProfileDNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "772:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 864,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "853:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "857:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "853:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 861,
                        "name": "profile",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "836:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                          "typeString": "contract ProfileDNFT"
                        }
                      },
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "844:8:4",
                      "memberName": "safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1054,
                      "src": "836:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "836:28:4"
                },
                {
                  "expression": {
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 868,
                        "name": "userToProfile",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "875:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 871,
                      "indexExpression": {
                        "expression": {
                          "id": 869,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "889:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "893:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "889:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "875:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 874,
                          "name": "profile",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "911:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                            "typeString": "contract ProfileDNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                            "typeString": "contract ProfileDNFT"
                          }
                        ],
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "903:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "903:16:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "875:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "875:44:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 879,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "950:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "954:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "950:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 883,
                            "name": "profile",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "970:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                              "typeString": "contract ProfileDNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ProfileDNFT_$1137",
                              "typeString": "contract ProfileDNFT"
                            }
                          ],
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "962:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 881,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "962:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "962:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 878,
                      "name": "ProfileCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 834,
                      "src": "935:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 886,
                  "nodeType": "EmitStatement",
                  "src": "930:49:4"
                }
              ]
            },
            "functionSelector": "5d86081b",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createProfileDNFT",
            "nameLocation": "574:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "_updateInterval",
                  "nameLocation": "597:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "592:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:22:4"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:4"
            },
            "scope": 901,
            "src": "565:421:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "1060:43:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 895,
                      "name": "userToProfile",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 828,
                      "src": "1077:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 897,
                    "indexExpression": {
                      "id": 896,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "1091:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1077:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 894,
                  "id": 898,
                  "nodeType": "Return",
                  "src": "1070:26:4"
                }
              ]
            },
            "functionSelector": "987ee156",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserProfile",
            "nameLocation": "1001:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1024:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1016:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:14:4"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1051:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1050:9:4"
            },
            "scope": 901,
            "src": "992:111:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1138,
        "src": "312:793:4",
        "usedErrors": [],
        "usedEvents": [
          834
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 902,
              "name": "ERC721",
              "nameLocations": [
                "1135:6:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2698,
              "src": "1135:6:4"
            },
            "id": 903,
            "nodeType": "InheritanceSpecifier",
            "src": "1135:6:4"
          },
          {
            "baseName": {
              "id": 904,
              "name": "ERC721URIStorage",
              "nameLocations": [
                "1147:16:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3018,
              "src": "1147:16:4"
            },
            "id": 905,
            "nodeType": "InheritanceSpecifier",
            "src": "1147:16:4"
          },
          {
            "baseName": {
              "id": 906,
              "name": "AutomationCompatibleInterface",
              "nameLocations": [
                "1169:29:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1630,
              "src": "1169:29:4"
            },
            "id": 907,
            "nodeType": "InheritanceSpecifier",
            "src": "1169:29:4"
          }
        ],
        "canonicalName": "ProfileDNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1137,
        "linearizedBaseContracts": [
          1137,
          1630,
          3018,
          2698,
          3045,
          1768,
          2814,
          3724,
          3736,
          3397
        ],
        "name": "ProfileDNFT",
        "nameLocation": "1116:11:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 911,
            "libraryName": {
              "id": 908,
              "name": "Counters",
              "nameLocations": [
                "1211:8:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3471,
              "src": "1211:8:4"
            },
            "nodeType": "UsingForDirective",
            "src": "1205:36:4",
            "typeName": {
              "id": 910,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 909,
                "name": "Counters.Counter",
                "nameLocations": [
                  "1224:8:4",
                  "1233:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3403,
                "src": "1224:16:4"
              },
              "referencedDeclaration": 3403,
              "src": "1224:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3403_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 914,
            "mutability": "mutable",
            "name": "tokenIdCounter",
            "nameLocation": "1272:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 1137,
            "src": "1247:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3403_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 913,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 912,
                "name": "Counters.Counter",
                "nameLocations": [
                  "1247:8:4",
                  "1256:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3403,
                "src": "1247:16:4"
              },
              "referencedDeclaration": 3403,
              "src": "1247:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3403_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 917,
            "mutability": "mutable",
            "name": "ipfsUri",
            "nameLocation": "1309:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 1137,
            "src": "1292:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 915,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1292:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 916,
              "nodeType": "ArrayTypeName",
              "src": "1292:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 919,
            "mutability": "immutable",
            "name": "interval",
            "nameLocation": "1345:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 1137,
            "src": "1322:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 918,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1322:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 921,
            "mutability": "mutable",
            "name": "lastUpdateTime",
            "nameLocation": "1372:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 1137,
            "src": "1359:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 920,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1359:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "1457:230:4",
              "statements": [
                {
                  "expression": {
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 930,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1467:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 931,
                      "name": "_updateInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 923,
                      "src": "1478:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1467:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:26:4"
                },
                {
                  "expression": {
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 934,
                      "name": "lastUpdateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "1503:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 935,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1520:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1526:9:4",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1520:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1503:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 940,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1555:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1559:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1555:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 942,
                            "name": "tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "1567:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3403_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1582:7:4",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3415,
                          "src": "1567:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3403_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3403_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1567:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 939,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2266,
                        2295
                      ],
                      "referencedDeclaration": 2266,
                      "src": "1545:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:47:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 948,
                            "name": "tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "1615:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3403_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1630:7:4",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3415,
                          "src": "1615:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3403_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3403_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1641:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 947,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2987,
                      "src": "1602:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1602:42:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:42:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 954,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "1654:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3403_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1669:9:4",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3429,
                      "src": "1654:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3403_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$3403_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:26:4"
                }
              ]
            },
            "id": 960,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "55736572496d61676573",
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1434:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1da11c585d29f065787f0259a9fc5b6b11b34e96ac2ed31ea7561240e635007f",
                      "typeString": "literal_string \"UserImages\""
                    },
                    "value": "UserImages"
                  },
                  {
                    "hexValue": "50686f746f",
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1448:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0cd4a4bc081385231480fe39157001287f8cda715836354d304edf2543a7010b",
                      "typeString": "literal_string \"Photo\""
                    },
                    "value": "Photo"
                  }
                ],
                "id": 928,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 925,
                  "name": "ERC721",
                  "nameLocations": [
                    "1427:6:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2698,
                  "src": "1427:6:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1427:29:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "_updateInterval",
                  "nameLocation": "1410:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "1405:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1404:22:4"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1457:0:4"
            },
            "scope": 1137,
            "src": "1393:294:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1623
            ],
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "1857:176:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 970,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1884:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1890:9:4",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1884:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 972,
                          "name": "lastUpdateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "1902:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1884:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 974,
                        "name": "interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "1919:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1884:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 976,
                          "name": "imageStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "1943:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 978,
                          "name": "ipfsUri",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "1958:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1966:6:4",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1958:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1943:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1884:88:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 987,
                  "nodeType": "IfStatement",
                  "src": "1867:160:4",
                  "trueBody": {
                    "id": 986,
                    "nodeType": "Block",
                    "src": "1983:44:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 982,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "1997:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2012:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1997:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "1997:19:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "1702:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 964,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1782:8:4"
            },
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1723:14:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1713:30:4"
            },
            "returnParameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "1813:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1808:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "1840:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1827:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1807:45:4"
            },
            "scope": 1137,
            "src": "1693:340:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1629
            ],
            "body": {
              "id": 1026,
              "nodeType": "Block",
              "src": "2096:268:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 995,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2123:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2129:9:4",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2123:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 997,
                          "name": "lastUpdateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "2141:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2123:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 999,
                        "name": "interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "2158:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2123:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1001,
                          "name": "imageStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "2182:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2182:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 1003,
                          "name": "ipfsUri",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "2197:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2205:6:4",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2197:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2182:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2123:88:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1025,
                  "nodeType": "IfStatement",
                  "src": "2106:252:4",
                  "trueBody": {
                    "id": 1024,
                    "nodeType": "Block",
                    "src": "2222:136:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1008,
                                    "name": "tokenIdCounter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 914,
                                    "src": "2249:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Counter_$3403_storage",
                                      "typeString": "struct Counters.Counter storage ref"
                                    }
                                  },
                                  "id": 1009,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2264:7:4",
                                  "memberName": "current",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3415,
                                  "src": "2249:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3403_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3403_storage_ptr_$",
                                    "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                  }
                                },
                                "id": 1010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2249:24:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2276:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2249:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1013,
                                "name": "ipfsUri",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "2279:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                  "typeString": "string storage ref[] storage ref"
                                }
                              },
                              "id": 1016,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1014,
                                  "name": "imageStage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "2287:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2287:12:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2279:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 1007,
                            "name": "_setTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2987,
                            "src": "2236:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2236:65:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1018,
                        "nodeType": "ExpressionStatement",
                        "src": "2236:65:4"
                      },
                      {
                        "expression": {
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1019,
                            "name": "lastUpdateTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "2315:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1020,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2332:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2338:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2332:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2315:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1023,
                        "nodeType": "ExpressionStatement",
                        "src": "2315:32:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 1027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "2048:13:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 993,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2087:8:4"
            },
            "parameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 991,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "2062:14:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2061:16:4"
            },
            "returnParameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2096:0:4"
            },
            "scope": 1137,
            "src": "2039:325:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "2407:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1033,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "2427:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1034,
                            "name": "tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "2431:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3403_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2446:7:4",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3415,
                          "src": "2431:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3403_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3403_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2431:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1032,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2266,
                        2295
                      ],
                      "referencedDeclaration": 2266,
                      "src": "2417:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1040,
                            "name": "tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "2479:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3403_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2494:7:4",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3415,
                          "src": "2479:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3403_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3403_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2479:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1043,
                          "name": "ipfsUri",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "2505:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 1045,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2513:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2505:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 1039,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2987,
                      "src": "2466:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:50:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1048,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "2526:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3403_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2541:9:4",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3429,
                      "src": "2526:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3403_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$3403_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:26:4"
                }
              ]
            },
            "functionSelector": "40d097c3",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeMint",
            "nameLocation": "2379:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2396:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "2388:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2387:12:4"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2407:0:4"
            },
            "scope": 1137,
            "src": "2370:189:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "2661:67:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1065,
                        "name": "_newImageUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "2684:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1062,
                        "name": "ipfsUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "2671:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2679:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2671:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:26:4"
                },
                {
                  "expression": {
                    "id": 1068,
                    "name": "ipfsUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 917,
                    "src": "2714:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1061,
                  "id": 1069,
                  "nodeType": "Return",
                  "src": "2707:14:4"
                }
              ]
            },
            "functionSelector": "eb3d68e7",
            "id": 1071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateImage",
            "nameLocation": "2574:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "_newImageUri",
                  "nameLocation": "2609:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "2595:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:42:4"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "2644:15:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1058,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2644:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1059,
                    "nodeType": "ArrayTypeName",
                    "src": "2644:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2643:17:4"
            },
            "scope": 1137,
            "src": "2565:163:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "2783:38:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1076,
                      "name": "ipfsUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "2800:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2808:6:4",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2800:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1075,
                  "id": 1078,
                  "nodeType": "Return",
                  "src": "2793:21:4"
                }
              ]
            },
            "functionSelector": "0a949bdd",
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "imageStage",
            "nameLocation": "2743:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:2:4"
            },
            "returnParameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "2777:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2776:6:4"
            },
            "scope": 1137,
            "src": "2734:87:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1088,
              "nodeType": "Block",
              "src": "2887:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 1086,
                    "name": "ipfsUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 917,
                    "src": "2904:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1085,
                  "id": 1087,
                  "nodeType": "Return",
                  "src": "2897:14:4"
                }
              ]
            },
            "functionSelector": "4e285928",
            "id": 1089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIpfsUri",
            "nameLocation": "2836:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2846:2:4"
            },
            "returnParameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1089,
                  "src": "2870:15:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1082,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2870:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1083,
                    "nodeType": "ArrayTypeName",
                    "src": "2870:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2869:17:4"
            },
            "scope": 1137,
            "src": "2827:91:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1976,
              2961
            ],
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "3044:47:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1101,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "3076:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1099,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3061:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ProfileDNFT_$1137_$",
                          "typeString": "type(contract super ProfileDNFT)"
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3067:8:4",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2961,
                      "src": "3061:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3061:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1098,
                  "id": 1103,
                  "nodeType": "Return",
                  "src": "3054:30:4"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2933:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1095,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1093,
                  "name": "ERC721",
                  "nameLocations": [
                    "2994:6:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2698,
                  "src": "2994:6:4"
                },
                {
                  "id": 1094,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "3002:16:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3018,
                  "src": "3002:16:4"
                }
              ],
              "src": "2985:34:4"
            },
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2959:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "2951:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2941:31:4"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "3029:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3028:15:4"
            },
            "scope": 1137,
            "src": "2924:167:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2439,
              3017
            ],
            "body": {
              "id": 1119,
              "nodeType": "Block",
              "src": "3187:37:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1116,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "3209:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1113,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3197:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ProfileDNFT_$1137_$",
                          "typeString": "type(contract super ProfileDNFT)"
                        }
                      },
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3203:5:4",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3017,
                      "src": "3197:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:20:4"
                }
              ]
            },
            "id": 1120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3106:5:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1111,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1109,
                  "name": "ERC721",
                  "nameLocations": [
                    "3161:6:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2698,
                  "src": "3161:6:4"
                },
                {
                  "id": 1110,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "3169:16:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3018,
                  "src": "3169:16:4"
                }
              ],
              "src": "3152:34:4"
            },
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3129:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "3121:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3121:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3111:31:4"
            },
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3187:0:4"
            },
            "scope": 1137,
            "src": "3097:127:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1865,
              2902
            ],
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "3353:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1132,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "3394:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 1130,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3370:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ProfileDNFT_$1137_$",
                          "typeString": "type(contract super ProfileDNFT)"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3376:17:4",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2902,
                      "src": "3370:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3370:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1129,
                  "id": 1134,
                  "nodeType": "Return",
                  "src": "3363:43:4"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3239:17:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1126,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1124,
                  "name": "ERC721",
                  "nameLocations": [
                    "3312:6:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2698,
                  "src": "3312:6:4"
                },
                {
                  "id": 1125,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "3320:16:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3018,
                  "src": "3320:16:4"
                }
              ],
              "src": "3303:34:4"
            },
            "parameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3273:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "3266:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3256:34:4"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "3347:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3346:6:4"
            },
            "scope": 1137,
            "src": "3230:183:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1138,
        "src": "1107:2308:4",
        "usedErrors": [],
        "usedEvents": [
          1760,
          1767,
          2713,
          2722,
          2731
        ]
      }
    ],
    "src": "32:3384:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-04-23T06:07:22.435Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}